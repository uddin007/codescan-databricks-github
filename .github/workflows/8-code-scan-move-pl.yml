name: 8-code scan and move pipeline 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write  
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install Jupyter
      run: |
        pip install jupyter
        pip install nbconvert
    - name: Convert Jupyter Notebooks
      run: |
        for notebook in notebooks/*.ipynb; do
            jupyter nbconvert --to python "$notebook" 
        done
    - name: Commit and Push Converted Files
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add *.py
        git commit -m "Convert notebooks to Python scripts" || echo "No changes to commit"
        git push origin HEAD:main
    - name: Notify success
      run: |
        echo "Successfully pushed changes!"

  codescan:
    runs-on: ubuntu-latest
    needs: convert # codescan depends on convert
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Specify your Python version
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1
    - name: Wait for 30 seconds
      run: sleep 30
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        checkout_path: notebooks # Specify the folder to analyze
        category: "/language:${{matrix.language}}"

  # delete-converted:
  #   runs-on: ubuntu-latest
  #   needs: codescan # delete-converted depends on codescan
  #   permissions:
  #     contents: write  # Allow writing to the repository contents
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.8'
  #   - name: Commit and Push Delete Converted Files
  #     run: |
  #       git config --global user.name "github-actions[bot]"
  #       git config --global user.email "github-actions[bot]@users.noreply.github.com"
  #       git rm notebooks/*.py || echo "File not found, nothing to delete"
  #       git commit -m "Convert notebooks to Python scripts and delete specified file" || echo "No changes to commit"
  #       git push origin HEAD:main

  move-notebooks-databricks:
    runs-on: ubuntu-latest
    needs: codescan # delete-converted depends on codescan
    # needs: delete-converted # move-notebooks-databricks depends on delete-converted
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install Databricks CLI
      run: |
        pip install databricks-cli
    - name: Configure Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        databricks configure --token <<EOF
        $DATABRICKS_HOST
        $DATABRICKS_TOKEN
        EOF
    - name: Move notebooks to Databricks
      run: |
        for notebook in notebooks/*.ipynb; do
          databricks workspace import --overwrite --format SOURCE --language PYTHON "$notebook" "/Workspace/Shared/test-dbx-devops/$(basename "$notebook")"
        done
    - name: Move folder to Databricks
      run: |
        # databricks workspace import --overwrite --format SOURCE --language PYTHON --recursive "notebooks/" "/Workspace/Shared/test-dbx-devops-notebooks"
        databricks workspace import --overwrite --format SOURCE --language PYTHON "notebooks/" "/Workspace/Shared/test-dbx-devops-notebooks"

        
