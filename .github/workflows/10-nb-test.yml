name: 10-Run Databricks Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-notebooks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Adjust the Python version as needed

      - name: Install dependencies
        run: |
          pip install pytest databricks-cli

      - name: Run unit tests on notebooks
        run: |
          for notebook in notebooks/*.ipynb; do
            jupyter nbconvert --to notebook --execute --inplace $notebook
          done

      - name: Configure Databricks CLI
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks configure --token <<EOF
          $DATABRICKS_HOST
          $DATABRICKS_TOKEN
          EOF

      - name: Upload notebooks to Databricks
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          # Replace `your_notebook_path` with the path to your notebook(s)
          for notebook in notebooks/*.ipynb; do
            databricks workspace import --overwrite --format JUPYTER $notebook /Workspace/Tests/$(basename $notebook)
          done

      - name: Run notebooks on Databricks
        run: |
          # Assuming you want to run the last uploaded notebook
          notebook_path=$(basename notebooks/*.ipynb)
          response=$(databricks jobs.create --json "{\"name\":\"Test Notebook\",\"notebook_task\":{\"notebook_path\":\"/Workspace/Tests/$notebook_path\"}}")
          job_id=$(echo $response | jq -r .job_id)
          databricks jobs.run-now --job-id $job_id

