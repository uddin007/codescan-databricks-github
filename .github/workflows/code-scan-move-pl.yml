name: code scan and move pipeline 

on:
  push:
    branches: [ "main" ]

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write  
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Check for .ipynb files
      id: check_notebooks
      run: |
        if ls notebooks/*.ipynb 1> /dev/null 2>&1; then
          echo "notebooks_exist=true" >> $GITHUB_ENV
        else
          echo "notebooks_exist=false" >> $GITHUB_ENV
        fi
    - name: Install Jupyter
      if: env.notebooks_exist == 'true'
      run: |
        pip install jupyter
        pip install nbconvert
    - name: Convert Jupyter Notebooks
      if: env.notebooks_exist == 'true'
      run: |
        for notebook in notebooks/*.ipynb; do
            jupyter nbconvert --to python "$notebook" 
        done
    - name: Commit and Push Converted Files
      if: env.notebooks_exist == 'true'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add *.py
        git commit -m "Convert notebooks to Python scripts" || echo "No changes to commit"
        git push origin HEAD:main
    - name: Notify success
      if: env.notebooks_exist == 'true'
      run: |
        echo "Successfully pushed changes!"

  # codescan:
  #   runs-on: ubuntu-latest
  #   needs: convert # codescan depends on convert
  #   permissions:
  #     # required for all workflows
  #     security-events: write
  #     # required to fetch internal or private CodeQL packs
  #     packages: read
  #     # only required for workflows in private repositories
  #     actions: read
  #     contents: read
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.8'  # Specify your Python version
  #   - name: Initialize CodeQL
  #     uses: github/codeql-action/init@v3
  #     with:
  #       languages: ${{ matrix.language }}
  #       build-mode: ${{ matrix.build-mode }}
  #   - if: matrix.build-mode == 'manual'
  #     shell: bash
  #     run: |
  #       echo 'If you are using a "manual" build mode for one or more of the' \
  #         'languages you are analyzing, replace this with the commands to build' \
  #         'your code, for example:'
  #       echo '  make bootstrap'
  #       echo '  make release'
  #       exit 1
  #   - name: Wait for 30 seconds
  #     run: sleep 30
  #   - name: Perform CodeQL Analysis
  #     uses: github/codeql-action/analyze@v3
  #     with:
  #       checkout_path: notebooks # Specify the folder to analyze
  #       category: "/language:${{matrix.language}}"

  move-notebooks-databricks:
    runs-on: ubuntu-latest
    # needs: codescan # move-notebooks-databricks depends on codescan
    needs: convert
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install Databricks CLI
      run: |
        pip install databricks-cli==0.18
    - name: Configure Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        databricks configure --token <<EOF
        $DATABRICKS_HOST
        $DATABRICKS_TOKEN
        EOF
    - name: Identify modified Python notebooks
      run: |
        MODIFIED_NOTEBOOKS=$(git diff --name-only --diff-filter=ACMRTUXB $(git merge-base HEAD^ HEAD) HEAD notebooks/*.py)
        # echo "modified notebooks: $MODIFIED_NOTEBOOKS"
        # echo "MODIFIED_NOTEBOOKS=$MODIFIED_NOTEBOOKS" >> $GITHUB_ENV
        echo "modified notebooks: $MODIFIED_NOTEBOOKS"
        echo "MODIFIED_NOTEBOOKS<<EOF" >> $GITHUB_ENV
        echo "$MODIFIED_NOTEBOOKS" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    - name: Move notebooks to Databricks Workspace
      run: |
        for notebook in $MODIFIED_NOTEBOOKS; do
          echo "$notebook" 
          filename=$(basename "$notebook" .py) 
          echo "$filename" 
          databricks workspace import --overwrite --format SOURCE --language PYTHON "$notebook" "/Workspace/Shared/test-dbx-devops/$filename"
        done
    # - name: Run Databricks Workflow
    #   if: ${{ env.MODIFIED_NOTEBOOKS != '' }}
    #   run: |
    #     echo "modified notebooks: $MODIFIED_NOTEBOOKS"
    #     databricks jobs run-now --job-id 32558063500619
